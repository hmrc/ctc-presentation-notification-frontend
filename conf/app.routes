# microservice specific routes

->         /                                                                  app.locationOfGoods.Routes
->         /                                                                  app.loading.Routes
->         /                                                                  app.transitOperation.Routes
->         /                                                                  app.loading.Routes
->         /                                                                  app.transport.Routes

->         /hmrc-frontend                                                     hmrcfrontend.Routes
GET        /assets/*file                                                      controllers.Assets.versioned(path = "/public", file: Asset)

GET        /complete-declaration/more-information/:departureId                controllers.MoreInformationController.onPageLoad(departureId: String)
POST       /complete-declaration/more-information/:departureId                controllers.MoreInformationController.onSubmit(departureId: String)
GET        /complete-declaration/check-information/:departureId               controllers.CheckInformationController.onPageLoad(departureId: String)

GET        /keep-alive                                                        controllers.KeepAliveController.keepAlive(departureId: Option[String] = None)
GET        /:departureId/keep-alive                                           controllers.KeepAliveController.keepAlive(departureId: Option[String])

GET        /error/bad-request                                                 controllers.ErrorController.badRequest()
GET        /error/not-found                                                   controllers.ErrorController.notFound()
GET        /error/technical-difficulties                                      controllers.ErrorController.technicalDifficulties()
GET        /error/internal-server-error                                       controllers.ErrorController.internalServerError()

GET        /this-service-has-been-reset                                       controllers.SessionExpiredController.onPageLoad()
POST       /this-service-has-been-reset                                       controllers.SessionExpiredController.onSubmit()

GET        /error/cannot-use-service-no-eori                                  controllers.UnauthorisedController.onPageLoad()
GET        /unauthorised-group-access                                         controllers.UnauthorisedWithGroupAccessController.onPageLoad()

GET        /place-of-loading/add/:departureId                                 controllers.AddPlaceOfLoadingYesNoController.onPageLoad(departureId: String, mode: Mode = NormalMode)
POST       /place-of-loading/add/:departureId                                 controllers.AddPlaceOfLoadingYesNoController.onSubmit(departureId: String, mode: Mode = NormalMode)
GET        /place-of-loading/change-add/:departureId                          controllers.AddPlaceOfLoadingYesNoController.onPageLoad(departureId: String, mode: Mode = CheckMode)
POST       /place-of-loading/change-add/:departureId                          controllers.AddPlaceOfLoadingYesNoController.onSubmit(departureId: String, mode: Mode = CheckMode)

GET        /:departureId                                                      controllers.IndexController.index(departureId: String)

GET        /check-answers/:departureId                                        controllers.CheckYourAnswersController.onPageLoad(departureId: String)
POST       /check-answers/:departureId                                        controllers.CheckYourAnswersController.onSubmit(departureId: String)

